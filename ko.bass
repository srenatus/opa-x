#!/usr/bin/env bass
(provide [oci build-oci fixup-annotations]
  (defn build-oci [src]
    (let [out ./oci/]
      (-> (cd src ($ ko build --push=false --oci-layout-path (str out) "."))
          (with-image (linux/distroless.dev/ko))
          (subpath out))))

  (defn fixup [manifest]
    (merge manifest {:annotations {:org.opencontainers.image.ref.name "latest"}}))

  (defn fixup-annotations [oci-dir]
     (let [index oci-dir/index.json
           manifest (next (read index :json))]
        (dump (merge manifest {:manifests (map fixup (:manifests manifest))}))))
  
  (defn build [src]
    (let [out ./output.tar
          oci-dir (build-oci src)
          new-index (fixup-annotations oci-dir)]
      (-> (from (linux/alpine)
            (-> ($ tar cf $out ./)
                (with-dir ./tmp/)
                (with-mount oci-dir ./tmp/))
            (-> ($ tar cf $out ./) ; replacing index.json inplace
                (with-dir ./tmp/)
                (with-mount (mkfs ./index.json (json new-index)) ./tmp/index.json)))
          (subpath out))))

  (defn oci [src]
    {:file (build src)
     :platform {:os "linux"}
     :tag "latest"
    })
)
